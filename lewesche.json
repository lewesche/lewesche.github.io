{
    "contact":{
        "name":"Leif Wesche",
        "email":"Lewesche@gmail.com"},
    "summary":[
        "paragraph 1",
        "paragraph 2"
    ],  
    "education":[
        {"school":"University of Southern California", "location":"Los Angeles, CA", "graduation":"Graduated Winter 2020", "degree":"MS in Computer Science", "gpa":"4.00"},
        {"school":"University of Washington", "location":"Seattle, WA", "graduation":"Graduated Summer 2018", "degree":"BS in Aerospace Engineering", "gpa":"3.75"}
    ],  
    "about":[
        "I recently finished grad school at USC with a MS in computer science. My undergraduate degree was in aerospace engineering.",
        "In graduate school I focused on systems courses. I'm also interested in web development, graphics, audio/signal processing, machine learning. I like to keep learning and build things üòõ"
    ],  
    "experience":[
        {"company":"USC", "title":"Teaching Assistant", "date":"Fall 2019 - Winter 2020", "summary":[
            "Taught discrete math and algorithms (CSCI 107) in the fall of 2019.",
            "Taught three semesters of data structures and OO design (CSCI 104) from spring 2020 onward.",
            "Designed programing homeworks/labs, writing grading tools, created content for weekly discussions, ran labs, and hunted C++ bugs in office hours."]},
        {"company":"SpaceX", "title":"Associate Engineer", "date":"Fall 2018 - Winter 2018", "summary":[
            "This was SpaceX's new grad program. I worked on the crew capsule actuators systems that moved the seats with the interior mechanisms team.",
            "Designed and analyzed metal and fabric components  using first principles, CAD, and FEA.",
            "Built test hardware for actuator vibration and thermal testing. Performed some simple modal and thermal analysis to inform these designs.",
            "Got some experience running tests, handling transducer hardware, labview, and excel + python to process data."]},
        {"company":"UW Human Ability and Engineering Lab", "title":"Undergrad Researcher", "date":"2017 - 2018", "summary":[
            "Ankle foot orthoses (AFOs) are commonly prescribed to cerebral palsy patients to assist with walking.",
            "Our goal was to build a simple device to quantify power loss and the efficiency of an AFO, then validate our deivce by comparing it to human data. I co-designed and maufactured a test AFO and a fake-ankle type device to apply load to the AFO.",
            "Recorded analog test data using an Arduino C++ program and processed data with Matlab to attempt to quantify losses and user end power."]},
        {"company":"NASA MSFC", "title":"Intern", "date":"Summer 2017", "summary":[
            "I worked with three other interns to study additively manufactured (metal 3d printed) lattice structures. The ability to fabricate these web-like volumes is pretty new, and engineers are just begining to design parts with lattice structural/flow components.",
            "These structures are difficult to analyze with FEA. Our goal was to quantify their physical properties (mechanical, thermal, and fluid) for use in analysis.",
            "We designed and conducted thermal and flow tests to record pressure and temp data, similar to how they might be used in a heat exchanger. We also ran torsion/tension/shear tests on lattice structures."]}
    ],
    "projects":[
	{"title":"Secrets", "summary":"Just for fun", "lang":"C++, Rust, and Javascript", "details":[
	{"text":"I wanted an easy lightweight way to store passwords. I had an idea for a tool for storing, managing, and reading encrypted data without saving any master password. Instead, I hashed <username, password> values to get a single value, which was used to seed a CSPRGN (random number generator). For authentication, the first 64 bit value out of the generator for each user is along with their username instead of a password. Subsequent values are used for encrypting/decrypting."},
        {"text":"This project started as a CLI tool written in C++. I used POSIX threads to handle many encryption/decryption routines in parallel."},
	{"text":"Next I turned it into a browser app. I built a Rust backend to serve HTTP requests and  perform encryption/decryption. I stored user data in a MongoDB instance running on AWS, and containerized the app with docker. I wrote unit tests in python to check against while developing the API. I set up NGINX as a HTTPS reverse proxy, and built a static Javascript front end."},
	{"text":"Finally I realized the application could use less server resources by offloading encryption/decryption to the client. To do this I compiled the encryption/decryption logic written in Rust down to WebAssembly and bundled it with the frontend javascript. Now that the backend didn‚Äôt need to run encryption/decryption routines, I rebuilt a simplified asynchronous backend with Node.js/Express.", "links":[
		{"text":"secrets", "url":"https://lewesche.com/secrets.html"}, 
		{"text":"github", "url":"https://github.com/lewesche/secrets"}]}
    ]},

		{"title":"JOS", "summary":"Advanced Operating Systems class project", "lang":"C/assembly", "details":[
            {"text":"JOS is a exokernel OS built for x86 architecture."},
            {"text":"The project touched on the boot process and file system, but the brunt of it had to do with the virtual memory subsystem."},
            {"text":"I thought JOS was a fun next step after Weenix because much of the project revolved around the specifics of x86 hardware. We got to interact with the hardware while working with page tables, supporting multiple CPUs, preemption/context switching, and handling traps/interrupts."},
			{"text":"Some other cool features include a debugging tool to trace the stack, shell commands, a IPC system, and a unix style fork() in user space."}
        ]},


		{"title":"Weenix", "summary":"Operating Systems class project", "lang":"C/assembly", "details":[
            {"text":"Semester long project with two pals building out a single threaded Unix 6th edition based kernel running in QEMU."},
            {"text":"Implemented process and thread data structures, a FIFO scheduler, kernel level mutex, virtual file system, Unix system calls, shadow objects and an on-demand paged virtual memory. Eventually got user code running!"}
        ]},


	{"title":"News App", "summary":"Web Tech class projects", "lang":"html/css/js/python(flask)/java", "details":[
        {"text":"Web Development Class Project. Built a live news Web App that fetched data from various APIs through a cloud hosted backend."},
        {"text":"html/css/js, python Flask backend hosten on AWS", "links":[
            {"text":"Link", "url":"http://homework6-env.eba-aqhnumkd.us-east-1.elasticbeanstalk.com/index.html"},
            {"text":"Video", "url":"https://www.youtube.com/watch?v=zYx_7yxwQbg"}]},
        {"text":"React frontend, node.js backend, GCP hosted", "links":[
            {"text":"Link", "url":"https://argon-retina-271020.wl.r.appspot.com/"},
            {"text":"Video", "url":"https://www.youtube.com/watch?v=adw-17RX2mw"}]},
        {"text":"Android App (Java), node.js backend, GCP hosted", "links":[
            {"text":"Video", "url":"https://www.youtube.com/watch?v=td6YLY7J3Xc&t=21s"}]}
    ]},


    {"title":"Matrix Music Visualizer", "summary":"Just for fun", "lang":"C++", "details":[
        {"text":"I built an Arduino driven music visualizer. An 8x8 array of LEDs behind a black acrylic sheet form a 64 pixel ‚Äúscreen‚Äù."},
        {"text":"Designed a custom PCB and 3D printed frame. Wrote C++ software to sample an integrated analog mic and Fast Fourier Transform the signal into frequency bins, used to animate LED‚Äôs in real time.", "links":[
        {"text":"Video", "url":"https://www.youtube.com/watch?v=jVYRgS695s0"},
		{"text":"github", "url":"https://github.com/lewesche/LED-Matrix"}]}
    ]}


    ],
    "skills":[
        {"category":"Programming", "details":[
            {"title":"Languages", "text":"C, C++, Javascript, Rust, Go, Python, Bash, Java, and Matlab/Simulink. I've worked on linux, macOS, and windows."},
            {"title":"Software Development", "text":"I‚Äôve worked with git, make, cmake, gdb, multithreading (POSIX/C++11 and Go)."},
	    {"title":"Backend Web", "text":"I‚Äôbe build REST APIs with Node.js, Flask, Rocket.rs, MongoDB and PostGres/SQL. I‚Äôve containerized applications with Docker and configured NGINX servers. I‚Äôve deployed sites and services on AWS, GCP, and other servers."},
	    {"title":"Frontend Web", "text":"I‚Äôve worked with html/css/md, JQuery, Bootstrap, React, Webpack, and p5.js. I‚Äôve also embedded WebAssembly/WASM into frontend javascript."},
	    {"title":"Testing", "text":"I‚Äôve written stress, memory leak, and API unit tests with valgrind, and the Google Test(C++), Pytest, and Postman."},
	    {"title":"Data Science", "text":"Hands on experience with ML concepts like cross validation, bootstrap, SMOTE, and regularization. I‚Äôve used KNN, linear/logistic regression, bayesian discriminant analysis, lasso/ridge regression, principal component regression, support vector machines, random forests and K-means clustering algorithms. All of this was done with Python/sklearn/pandas."},
        {"title":"Coursework", "text":"I‚Äôve taken classes on operating systems, networking, databases, algorithms + data Structures, applied math, signal processing, control theory, and machine learning."}
        ]},
        {"category":"Math", "details":[
            {"title":"Algorithms", "text":"Farmiliar with graph algorithms, principle component analysis, dynamic/linear programming methods, and applying complexity analysis to design code that scales."},
            {"title":"Simulation", "text":"I've built and <a href=\"https://www.youtube.com/watch?v=WoiuuW4Uc2k\">animated</a> fun physics simulations, and done more practical stuff like design PID systems with bode/nyquist plots and test them with simulink."},
            {"title":"Signal Processing", "text":"I've processed <a href=\"https://www.youtube.com/watch?v=eyxP5UhLbM8\">audio</a> with Fourier analysis algorithms and worked with <a href=\"https://www.youtube.com/watch?v=NIxpzcMw3LA\">real world data collection</a>."}
        ]},
        {"category":"Engineering", "details":[
            {"title":"Design", "text":"I've used CAD software for mechanical design (Solidworks, NX) and electrical design (KiCad), plus Anysis for FEA."},
            {"title":"Mechatronics", "text":"I've incorporated microcontrollers/RPis, LiPos power systems, brushed/brushless motors, RC receiver/transmitters, and other hardware into <a href=\"https://github.com/lewesche/RC_Car\">projects</a>."},
            {"title":"Manufacturing", "text":"Familiar with GD&T drafting, metal/plastic 3D printing, THT/SMD soldering, and 2 axis mills/lathes."}
        ]},
        {"category":"Other", "details":[
            {"title":"For fun", "text":"playing drums ü•Åü•Åü•Å"}
        ]}
    ]
}
